version: '3.3'
services:
  mysql:
    image: ${DB_IMAGE}:${DB_IMAGE_TAG}
    container_name: ${DB_DOCKER_NAME}
    restart: ${DB_DOCKER_RESTART_POLICY}
    environment:
      #if uncomment following line(same in env file), this database will be created automatically
      #when container starts
      #MYSQL_DATABASE: ${DB_DATABASE_NAME}
      MYSQL_USER: ${DB_USER_NAME}
      MYSQL_PASSWORD_FILE: ${DB_USER_PASSWORD_ROUTE}
      MYSQL_ROOT_PASSWORD_FILE: ${DB_ROOT_PASSWORD_ROUTE}
    ports:
      - ${DB_PORT_EXPOSED}:${DB_PORT_INTERNAL}
    expose:
      - ${DB_PORT_EXPOSED}
    secrets:
            - DB_ROOT_PASSWORD
            - DB_USER_PASSWORD
    volumes:
      #Volume that contains DB
      - type: volume
        source: mysql_db
        target: ${DB_VOLUME_MOUNTPOINT}
      #Mount folder where are the initial sql
      - type: bind
        source: ${DB_SCRIPT_START_ROUTE_LOCAL}
        target: ${DB_SCRIPT_START_ROUTE}
    healthcheck:
            test: ["CMD-SHELL",'mysqladmin ping -h localhost -P 3306 -u user --password=$$(cat /run/secrets/DB_USER_PASSWORD) || exit 1']
            interval: 2m
            timeout: 30s
            retries: 3
            start_period: 10m
    networks:
            - databasenet

  colab:
    build: 
      context: ../colab
      dockerfile: Dockerfile 
    image: "${COLAB_IMAGE}:${COLAB_IMAGE_TAG}"
    container_name: ${COLAB_DOCKER_NAME}
    restart: ${COLAB_DOCKER_RESTART_POLICY}
    entrypoint: ["tail","-f","/dev/null"]
    environment:
      MYSQL_DATABASE_NAME: ${COLAB_DATABASE_NAME}
      MYSQL_USER: ${DB_USER_NAME}
      MYSQL_PASSWORD_FILE: ${DB_USER_PASSWORD_ROUTE}
      MYSQL_ROOT_PASSWORD_FILE: ${DB_ROOT_PASSWORD_ROUTE}
      MYSQL_PORT: ${DB_PORT_EXPOSED}
      MYSQL_IP: ${DB_DOCKER_NAME}
    ports:
      - ${COLAB_PORT_EXPOSED}:${COLAB_PORT_INTERNAL}
    expose:
      - ${COLAB_PORT_EXPOSED}
    secrets:
            - DB_ROOT_PASSWORD
            - DB_USER_PASSWORD
    networks:
            - databasenet
            - frontend


secrets:
        DB_ROOT_PASSWORD:
                file: ${DB_ROOT_PASSWORD_ROUTE_LOCAL}
        DB_USER_PASSWORD:
                file: ${DB_USER_PASSWORD_ROUTE_LOCAL}
volumes:
        mysql_db:
                name: ${DB_VOLUME_NAME}

networks:
  databasenet:
    driver: bridge
    internal: true
  frontend:
    driver: bridge
